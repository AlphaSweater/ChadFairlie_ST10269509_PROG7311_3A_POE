@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@model WebApp.ViewModels.EmployeeViewModels.DetailedFarmerViewModel

@{
    ViewData["Title"] = "View Farmer";
}

<head>
    <style>
        body {
            background-color: #fbf8f3;
        }

        .text-brown {
            color: #6f4e37;
        }

        .btn-success {
            background-color: #5e8c61;
            border-color: #5e8c61;
        }

            .btn-success:hover {
                background-color: #4e7551;
                border-color: #4e7551;
            }

        .form-label {
            font-weight: 600;
            color: #6f4e37;
        }

        .farmer-details-card {
            background-color: #f6f4ef;
            border-radius: 8px;
            box-shadow: 0 4px 10px rgba(94, 140, 97, 0.2);
            padding: 20px;
            margin-bottom: 20px;
        }

        .product-list-title {
            color: #6f4e37;
            font-weight: bold;
        }

        .back-button {
            font-weight: 600;
            color: #6f4e37;
            text-decoration: none;
            transition: color 0.3s ease;
        }

            .back-button:hover {
                color: #4e7551;
                text-decoration: underline;
            }
    </style>
</head>

<div class="container py-4">
    <!-- Title with Back Button -->
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2 class="text-success fw-bold">👨‍🌾 Farmer Details</h2>
        <a href="@Url.Action("ManageFarmers", "Employee")" class="back-button">← Back to Farmers</a>
    </div>

    <!-- Farmer Details Section -->
    <div class="farmer-details-card">
        <p><strong>Farmer ID:</strong> @Model.FarmerId</p>
        <p><strong>Name:</strong> @Model.FullName</p>
        <p><strong>Email:</strong> @Model.Email</p>
        <p><strong>Products Count:</strong> @Model.Products.Count()</p>
        <br />
        <p><strong>Created By:</strong> @Model.CreatedBy.FullName</p>
        <p><strong>Created On:</strong> @Model.CreatedOn</p>
        <br />
        <form asp-controller="Employee" asp-action="EditFarmer" method="post" class="d-inline">
            <input type="hidden" name="FarmerId" value="@Model.FarmerId" />
            <button type="submit" class="btn btn-outline-success">Edit Farmer</button>
        </form>
    </div>

    <!-- Filter Section -->
    <div class="card shadow-sm border-0 mb-4" style="background-color: #f6f4ef;">
        <div class="card-body">
            <h5 class="mb-3 text-brown">🔍 Filter Products</h5>
            <form id="filter-form" method="get" class="row g-3 align-items-end">
                <div class="col-md-4">
                    <label for="category" class="form-label">Category</label>
                    <select id="category" name="category" class="form-select">
                        <option value="">All Categories</option>
                        @foreach (var category in ViewBag.Categories as List<string>)
                        {
                            <option value="@category">@category</option>
                        }
                    </select>
                </div>
                <div class="col-md-3">
                    <label for="startDate" class="form-label">Start Date</label>
                    <input type="date" id="startDate" name="startDate" class="form-control" />
                </div>
                <div class="col-md-3">
                    <label for="endDate" class="form-label">End Date</label>
                    <input type="date" id="endDate" name="endDate" class="form-control" />
                </div>
                <div class="col-md-2 d-flex gap-2">
                    <button type="button" class="btn btn-success w-100" onclick="fetchFilteredProducts()">Filter</button>
                    <button type="button" class="btn btn-outline-secondary w-100" onclick="resetFilters()">Clear</button>
                </div>
            </form>
        </div>
    </div>

    <!-- Farmer's Products Section -->
    <div>
        <h3 class="product-list-title">🌾 Products by @Model.FullName</h3>
        <div id="product-list" class="row">
            @Html.Partial("_ProductCardList", Model.Products)
        </div>
    </div>
</div>

<script>
    function fetchFilteredProducts() {
        const formData = new FormData(document.getElementById("filter-form"));
        const queryString = new URLSearchParams(formData).toString();

        fetch(`/Employee/GetFilteredProductsByFarmer?farmerId=@Model.FarmerId&${queryString}`)
            .then(res => res.text())
            .then(html => {
                document.getElementById("product-list").innerHTML = html;
            });
    }

    function resetFilters() {
        document.getElementById("filter-form").reset();
        fetchFilteredProducts();
    }
</script>
