@{
	Layout = null;
	ViewData["Title"] = "Welcome";
}
<!DOCTYPE html>
<html lang="en">

<head>
	<meta charset="utf-8" />
	<title>AgriAuth</title>
	<meta name="viewport" content="width=device-width, initial-scale=1" />
	<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
	<link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
	<link href="~/css/auth-animations.css" rel="stylesheet" />
	<style>
		body {
			margin: 0;
			font-family: 'Roboto', sans-serif;
			background: linear-gradient(135deg, #4b6e4a, #2f3e2c);
			color: #fff;
		}

		.auth-page-container {
			display: flex;
			flex-direction: column;
			align-items: center;
			justify-content: center;
			min-height: 100vh;
			padding: 20px;
			transition: all 0.5s ease-in-out;
		}

			.auth-page-container.form-active {
				flex-direction: row;
				justify-content: center;
			}

		.logo-container {
			text-align: center;
			margin-bottom: 20px;
			transition: all 0.3s ease;
		}

			.logo-container.form-active {
				margin-bottom: 0;
				margin-right: 50px;
				text-align: center;
			}

		.logo {
			width: 200px;
			height: 200px;
			border-radius: 50%;
		}

		.title {
			font-weight: 700;
			font-size: 32px;
			margin-top: 10px;
			transition: all 0.3s ease;
		}

			.title.form-active {
				font-size: 28px;
				text-align: center;
			}

		#enterButton {
			font-size: 22px;
			padding: 15px 30px;
			border-radius: 50px;
			background-color: #6c4f3d;
			border: none;
			color: #fff;
			transition: all 0.3s ease;
		}

			#enterButton:hover {
				background-color: #563f31;
				transform: scale(1.05);
			}

		.form-container {
			display: none;
			flex-direction: row;
			align-items: center;
			justify-content: center;
			width: 100%;
			max-width: 1000px;
			transition: all 0.3s ease;
		}

		.auth-page-container.form-active .form-container {
			display: flex;
		}

		.form {
			background-color: #e8f5e9;
			color: #2c2c2c;
			border-radius: 16px;
			padding: 35px;
			box-shadow: 0 8px 24px rgba(0, 0, 0, 0.2);
			width: 100%;
			max-width: 400px;
		}

		.inputbox {
			background-color: #f0f4f0;
			width: 100%;
			height: 45px;
			border-radius: 8px;
			border: 1px solid #ccc;
			padding: 10px;
			font-size: 16px;
			color: #333;
		}

			.inputbox:focus {
				border-color: #799c64;
				box-shadow: 0 0 5px rgba(121, 156, 100, 0.5);
				outline: none;
			}

		.button-confirm {
			width: 100%;
			height: 45px;
			border-radius: 8px;
			border: none;
			background-color: #5b8c5a;
			color: #fff;
			font-size: 16px;
			font-weight: 600;
			cursor: pointer;
			transition: background-color 0.2s;
		}

			.button-confirm:hover {
				background-color: #466c43;
			}

		.error-bar {
			width: 100%;
			background-color: #f8d7da;
			color: #721c24;
			padding: 10px;
			text-align: center;
			border-radius: 5px;
			border: 1px solid #f5c6cb;
			margin-bottom: 15px;
		}

		.switch-link {
			color: #4b6e4a;
			text-decoration: none;
			cursor: pointer;
		}

			.switch-link:hover {
				text-decoration: underline;
			}

		.hidden {
			display: none !important;
		}
	</style>
</head>

<body style="opacity: 0; transition: opacity 0.6s ease;" onload="document.body.style.opacity='1'">
	
	@if (TempData["ShowLoginForm"] != null)
	{
		<div id="triggerLoginForm" data-show="true" style="display:none;"></div>
	}
	@if (TempData["ShowSignUpForm"] != null)
	{
		<div id="triggerSignUpForm" data-show="true" style="display:none;"></div>
	}


	<div class="auth-page-container" id="authPageContainer">
		<!-- Logo and Title -->
        <div class="logo-container" id="logoContainer">
			<img src="~/image/AgriEnergyLogo.svg" alt="AgriEnergy Logo" class="logo" />
			<div class="title" id="title">Agri Energy Connect</div>
			<button id="enterButton" class="btn btn-primary mt-4">Enter</button>
        </div>

		<!-- Form Container -->
		<div class="form-container" id="formContainer">
            <!-- Login Form -->
			<form id="loginForm" class="form" method="post" action="/Auth/Login">
				<div class="title">Welcome,<br><span class="text-muted">login to continue</span></div>

				<!-- Email Field -->
				<input name="email" placeholder="Email" class="form-control inputbox mb-1"/>

				<!-- Password Field -->
				<input type="password" name="password" placeholder="Password" class="form-control inputbox mb-1" />

				<!-- Display Login Errors -->
				@if (TempData["LoginErrors"] != null)
				{
					<div class="error-bar">
						<ul>
							@foreach (var error in (Dictionary<string, string>)TempData["LoginErrors"])
							{
								<li>@error.Value</li>
							}
						</ul>
					</div>
				}
				@if (TempData["LoginError"] != null)
				{
					<div class="error-bar">
						@TempData["LoginError"]
					</div>
				}

				<button type="submit" class="btn btn-primary button-confirm">Let's go →</button>
				<p class="mt-3"><a href="#" id="showSignUp" class="switch-link">Need to make an account? Sign Up Here!</a></p>

				<!-- Note Section -->
				<div class="mt-4 p-3 bg-light text-dark rounded">
					<strong>Note:</strong> Default employee credentials are:
					<ul>
						<li>Email: <code>admin@gmail.com</code></li>
						<li>Password: <code>admin</code></li>
					</ul>
				</div>
			</form>

			@{
				Dictionary<string, string> signUpErrors = new();
				if (TempData["SignUpErrors"] != null)
				{
					var json = TempData["SignUpErrors"].ToString();
					signUpErrors = System.Text.Json.JsonSerializer.Deserialize<Dictionary<string, string>>(json);
				}

				string generalSignUpError = TempData["SignUpError"] as string;
				string signUpSuccess = TempData["SignUpSuccess"] as string;
			}

			<!-- Signup Form -->
			<form id="signUpForm" class="form hidden" method="post" action="/Auth/SignUp">
				<div class="title">Welcome employee,<br><span class="text-muted">create an account</span></div>

				<!-- Name Field -->
				<input type="text" name="name" placeholder="Name" class="form-control inputbox mb-1"/>
				@if (signUpErrors.ContainsKey("name"))
				{
					<div class="text-danger small mt-1">@signUpErrors["name"]</div>
				}

				<!-- Surname Field -->
				<input type="text" name="surname" placeholder="Surname" class="form-control inputbox mb-1"/>
				@if (signUpErrors.ContainsKey("surname"))
				{
					<div class="text-danger small mt-1">@signUpErrors["surname"]</div>
				}

				<!-- Email Field -->
				<input name="email" placeholder="Email" class="form-control inputbox mb-1"/>
				@if (signUpErrors.ContainsKey("email"))
				{
					<div class="text-danger small mt-1">@signUpErrors["email"]</div>
				}

				<!-- Password Field -->
				<input type="password" name="password" placeholder="Password" class="form-control inputbox mb-1"/>
				@if (signUpErrors.ContainsKey("password"))
				{
					<div class="text-danger small mt-1">@signUpErrors["password"]</div>
				}

				<!-- Confirm Password Field -->
				<input type="password" name="confirmPassword" placeholder="Confirm Password" class="form-control inputbox mb-1"/>
				@if (signUpErrors.ContainsKey("confirmPassword"))
				{
					<div class="text-danger small mt-1">@signUpErrors["confirmPassword"]</div>
				}

				<!-- General Error Message -->
				@if (!string.IsNullOrEmpty(generalSignUpError))
				{
					<div class="text-danger small mt-2">@generalSignUpError</div>
				}

				<!-- Success Message -->
				@if (!string.IsNullOrEmpty(signUpSuccess))
				{
					<div class="text-success small mt-2">@signUpSuccess</div>
				}

				<button type="submit" class="btn btn-primary button-confirm">Sign Up</button>
				<p class="mt-3"><a href="#" id="showLogin" class="switch-link">Already have an account? Log In!</a></p>
			</form>

		</div>
	</div>

	<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
	<script>
		document.addEventListener("DOMContentLoaded", function () {
			const enterButton = document.getElementById("enterButton");
			const authPageContainer = document.getElementById("authPageContainer");
			const logoContainer = document.getElementById("logoContainer");
			const title = document.getElementById("title");
			const loginForm = document.getElementById("loginForm");
			const signUpForm = document.getElementById("signUpForm");
			const showSignUp = document.getElementById("showSignUp");
			const showLogin = document.getElementById("showLogin");
			const formContainer = document.getElementById("formContainer"); // Don't forget this!

			// Switch to Sign-Up Form
			showSignUp.addEventListener("click", (e) => {
				e.preventDefault();
				loginForm.classList.add("hidden");
				signUpForm.classList.remove("hidden");
			});

			// Switch to Login Form
			showLogin.addEventListener("click", (e) => {
				e.preventDefault();
				signUpForm.classList.add("hidden");
				loginForm.classList.remove("hidden");
			});

			// Enter Button Animation
			enterButton.addEventListener("click", () => {
				enterButton.classList.add("fade-out");

				setTimeout(() => {
					enterButton.classList.add("hidden"); // fully hide after fade
					authPageContainer.classList.add("form-active");
					logoContainer.classList.add("form-active");
					title.classList.add("form-active");
					formContainer.classList.add("animated", "show"); // trigger animations
				}, 400);
			});

			// ✅ Auto-open form if server says so
			const triggerLogin = document.getElementById("triggerLoginForm");
			const triggerSignUp = document.getElementById("triggerSignUpForm");

			if (triggerLogin || triggerSignUp) {
				// Simulate the enter button click
				enterButton.click();

				// Then activate the correct form
				if (triggerSignUp) {
					showSignUp.click();
				} else {
					showLogin.click();
				}
			}
		});
	</script>

</body>
</html>